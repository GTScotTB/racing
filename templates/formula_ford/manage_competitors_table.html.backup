<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Formula Ford Competitors</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='styles.css') }}">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <style>
        .required:after {
            content: " *";
            color: red;
        }
        .add-row-btn {
            cursor: pointer;
        }
        .add-row-btn:hover {
            color: #0d6efd;
        }
        .competitor-row input.is-invalid {
            border-color: #dc3545;
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="text-center my-4">
            <h1>Manage Formula Ford Competitors</h1>
        </header>

        <!-- Flash Messages -->
        {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                <div class="flash-messages mb-4">
                    {% for category, message in messages %}
                        <div class="alert alert-{{ category }}">{{ message }}</div>
                    {% endfor %}
                </div>
            {% endif %}
        {% endwith %}

        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h2>Competitors</h2>
                <div>
                    <button type="button" id="addRowBtn" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> Add New Row
                    </button>
                </div>
            </div>
            <div class="card-body">
                <form method="POST" action="{{ url_for('manage_formula_ford_competitors_table') }}">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Car #<span class="text-danger">*</span></th>
                                    <th>First Name<span class="text-danger">*</span></th>
                                    <th>Last Name<span class="text-danger">*</span></th>
                                    <th>Team</th>
                                    <th>Vehicle Make<span class="text-danger">*</span></th>
                                    <th>Vehicle Type<span class="text-danger">*</span></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="competitorsTableBody">
                                <!-- Existing competitors -->
                                {% if competitors %}
                                    {% for competitor in competitors %}
                                    <tr class="existing-competitor">
                                        <td>{{ competitor.car_number }}</td>
                                        <td>{{ competitor.first_name }}</td>
                                        <td>{{ competitor.last_name }}</td>
                                        <td>{{ competitor.team_association or 'N/A' }}</td>
                                        <td>{{ competitor.vehicle_make }}</td>
                                        <td>{{ competitor.vehicle_type }}</td>
                                        <td>
                                            <a href="{{ url_for('edit_formula_ford_competitor', competitor_id=competitor.id) }}" class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                        </td>
                                    </tr>
                                    {% endfor %}
                                {% endif %}
                                
                                <!-- Template row for adding new competitors (initially empty) -->
                                <tr id="newRowTemplate" style="display: none;" class="competitor-row">
                                    <td>
                                        <input type="number" name="new_car_number[]" class="form-control" placeholder="Car #" required min="1">
                                    </td>
                                    <td>
                                        <input type="text" name="new_first_name[]" class="form-control" placeholder="First Name" required>
                                    </td>
                                    <td>
                                        <input type="text" name="new_last_name[]" class="form-control" placeholder="Last Name" required>
                                    </td>
                                    <td>
                                        <input type="text" name="new_team_association[]" class="form-control" placeholder="Team">
                                    </td>
                                    <td>
                                        <input type="text" name="new_vehicle_make[]" class="form-control" placeholder="Vehicle Make" required>
                                    </td>
                                    <td>
                                        <input type="text" name="new_vehicle_type[]" class="form-control" placeholder="Vehicle Type" required>
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-outline-danger remove-row">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            </tbody>
                            <!-- Add row indicator -->
                            <tfoot>
                                <tr id="addRowIndicator">
                                    <td colspan="7" class="text-center">
                                        <span class="add-row-btn" onclick="addNewRow()">
                                            <i class="bi bi-plus-circle"></i> Add Competitor
                                        </span>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    
                    <div class="mt-3 d-flex justify-content-end">
                        <a href="{{ url_for('formula_ford_dashboard') }}" class="btn btn-secondary me-2">
                            <i class="bi bi-arrow-left"></i> Back to Dashboard
                        </a>
                        <button type="submit" id="saveButton" class="btn btn-success">
                            <i class="bi bi-save"></i> Save New Competitors
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Function to add a new competitor row
        function addNewRow() {
            const template = document.getElementById('newRowTemplate');
            const tbody = document.getElementById('competitorsTableBody');
            
            // Clone the template row
            const newRow = template.cloneNode(true);
            newRow.id = '';
            newRow.style.display = '';
            newRow.classList.add('competitor-row');
            
            // Add event listener to remove button
            const removeBtn = newRow.querySelector('.remove-row');
            removeBtn.addEventListener('click', function() {
                newRow.remove();
            });
            
            // Add the new row to the table
            tbody.appendChild(newRow);
            
            // Focus the first input in the new row
            const firstInput = newRow.querySelector('input');
            if (firstInput) {
                firstInput.focus();
            }
        }
        
        // Form validation
        document.getElementById('competitorsForm').addEventListener('submit', function(e) {
            console.log('Form submission triggered');
            
            // Check if there's a hidden template row and ensure it's not counted
            const templateRow = document.getElementById('newRowTemplate');
            if (templateRow) {
                console.log('Template row found, ensuring it is not included in form submission');
                // Make sure the template row is not included in form submission
                templateRow.setAttribute('disabled', 'disabled');
                const templateInputs = templateRow.querySelectorAll('input');
                templateInputs.forEach(input => {
                    input.setAttribute('disabled', 'disabled');
                });
            }
            
            // Count actual visible rows (excluding template)
            let visibleRows = Array.from(document.querySelectorAll('.competitor-row')).filter(row => 
                row.id !== 'newRowTemplate' && row.style.display !== 'none'
            );
            
            console.log(`Found ${visibleRows.length} competitor rows that are visible`);
            
            // If no new rows, don't submit
            if (visibleRows.length === 0) {
                console.log('No rows detected - preventing submission');
                e.preventDefault();
                alert('No new competitors to save.');
                return;
            }
            
            // Check if at least one new row has data
            let hasData = false;
            let hasErrors = false;
            
            visibleRows.forEach((row, index) => {
                console.log(`Validating row ${index+1}`);
                const inputs = row.querySelectorAll('input[required]');
                console.log(`Row ${index+1} has ${inputs.length} required fields`);
                
                // Log all input names and values in this row
                const allInputs = row.querySelectorAll('input');
                console.log(`Row ${index+1} all inputs:`);
                allInputs.forEach(input => {
                    console.log(`  ${input.name}: ${input.value}`);
                });
                
                inputs.forEach(input => {
                    // Reset validation
                    input.classList.remove('is-invalid');
                    
                    if (input.value.trim() === '') {
                        console.log(`Empty required field: ${input.name}`);
                        input.classList.add('is-invalid');
                        hasErrors = true;
                    } else if (input.name.includes('car_number')) {
                        console.log(`Car number: ${input.value}`);
                        // Car number should be a positive integer
                        if (parseInt(input.value) <= 0 || isNaN(parseInt(input.value))) {
                            console.log(`Invalid car number: ${input.value}`);
                            input.classList.add('is-invalid');
                            hasErrors = true;
                        }
                        hasData = true;
                    } else {
                        hasData = true;
                    }
                });
            });
            
            if (hasErrors) {
                console.log('Form validation failed');
                e.preventDefault();
                alert('Please fill in all required fields correctly.');
            } else if (!hasData) {
                console.log('No data to submit');
                e.preventDefault();
                alert('No new competitors to save.');
            } else {
                console.log('Form validation passed, submitting form');
                console.log('Form data that will be submitted:');
                
                // Log form data that will be sent
                const formData = new FormData(document.getElementById('competitorsForm'));
                for (let pair of formData.entries()) {
                    console.log(`${pair[0]}: ${pair[1]}`);
                }
            }
        });
        
        // Add one empty row by default if there are no existing competitors
        document.addEventListener('DOMContentLoaded', function() {
            const existingCompetitors = document.querySelectorAll('.existing-competitor');
            if (existingCompetitors.length === 0) {
                addNewRow();
            }
        });
    </script>
</body>
</html> 